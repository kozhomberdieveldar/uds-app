{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: (phone, password) => api.post('/auth/login/', {\n    phone,\n    password\n  }),\n  register: (phone, password) => api.post('/auth/register/', {\n    phone,\n    password\n  }),\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};\nexport const companiesAPI = {\n  getCompanies: () => api.get('/companies/'),\n  getCompany: id => api.get(`/companies/${id}/`),\n  getCompanyProducts: id => api.get(`/companies/${id}/products/`),\n  connectToCompany: id => api.post(`/companies/${id}/connect/`)\n};\nexport const productsAPI = {\n  getProducts: () => api.get('/products/'),\n  getProduct: id => api.get(`/products/${id}/`)\n};\nexport const bonusAPI = {\n  getBonuses: () => api.get('/bonuses/'),\n  getBonusHistory: () => api.get('/transactions/'),\n  getTotalBonus: () => api.get('/bonuses/total/')\n};\nexport const ordersAPI = {\n  createOrder: data => api.post('/orders/', data),\n  getOrders: () => api.get('/orders/'),\n  getOrder: id => api.get(`/orders/${id}/`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","phone","password","post","register","logout","removeItem","companiesAPI","getCompanies","get","getCompany","id","getCompanyProducts","connectToCompany","productsAPI","getProducts","getProduct","bonusAPI","getBonuses","getBonusHistory","getTotalBonus","ordersAPI","createOrder","data","getOrders","getOrder"],"sources":["/Users/arsen/uds_app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  login: (phone, password) => api.post('/auth/login/', { phone, password }),\n  register: (phone, password) => api.post('/auth/register/', { phone, password }),\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n};\n\nexport const companiesAPI = {\n  getCompanies: () => api.get('/companies/'),\n  getCompany: (id) => api.get(`/companies/${id}/`),\n  getCompanyProducts: (id) => api.get(`/companies/${id}/products/`),\n  connectToCompany: (id) => api.post(`/companies/${id}/connect/`),\n};\n\nexport const productsAPI = {\n  getProducts: () => api.get('/products/'),\n  getProduct: (id) => api.get(`/products/${id}/`),\n};\n\nexport const bonusAPI = {\n  getBonuses: () => api.get('/bonuses/'),\n  getBonusHistory: () => api.get('/transactions/'),\n  getTotalBonus: () => api.get('/bonuses/total/'),\n};\n\nexport const ordersAPI = {\n  createOrder: (data) => api.post('/orders/', data),\n  getOrders: () => api.get('/orders/'),\n  getOrder: (id) => api.get(`/orders/${id}/`),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKf,GAAG,CAACgB,IAAI,CAAC,cAAc,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EACzEE,QAAQ,EAAEA,CAACH,KAAK,EAAEC,QAAQ,KAAKf,GAAG,CAACgB,IAAI,CAAC,iBAAiB,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC/EG,MAAM,EAAEA,CAAA,KAAM;IACZT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,aAAa,CAAC;EAC1CC,UAAU,EAAGC,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,cAAcE,EAAE,GAAG,CAAC;EAChDC,kBAAkB,EAAGD,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,cAAcE,EAAE,YAAY,CAAC;EACjEE,gBAAgB,EAAGF,EAAE,IAAKxB,GAAG,CAACgB,IAAI,CAAC,cAAcQ,EAAE,WAAW;AAChE,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzBC,WAAW,EAAEA,CAAA,KAAM5B,GAAG,CAACsB,GAAG,CAAC,YAAY,CAAC;EACxCO,UAAU,EAAGL,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,aAAaE,EAAE,GAAG;AAChD,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAG;EACtBC,UAAU,EAAEA,CAAA,KAAM/B,GAAG,CAACsB,GAAG,CAAC,WAAW,CAAC;EACtCU,eAAe,EAAEA,CAAA,KAAMhC,GAAG,CAACsB,GAAG,CAAC,gBAAgB,CAAC;EAChDW,aAAa,EAAEA,CAAA,KAAMjC,GAAG,CAACsB,GAAG,CAAC,iBAAiB;AAChD,CAAC;AAED,OAAO,MAAMY,SAAS,GAAG;EACvBC,WAAW,EAAGC,IAAI,IAAKpC,GAAG,CAACgB,IAAI,CAAC,UAAU,EAAEoB,IAAI,CAAC;EACjDC,SAAS,EAAEA,CAAA,KAAMrC,GAAG,CAACsB,GAAG,CAAC,UAAU,CAAC;EACpCgB,QAAQ,EAAGd,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,WAAWE,EAAE,GAAG;AAC5C,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
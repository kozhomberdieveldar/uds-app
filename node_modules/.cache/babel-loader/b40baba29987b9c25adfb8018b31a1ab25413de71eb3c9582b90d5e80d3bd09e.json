{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8001/api/uds';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: async (phone, password) => {\n    // JWT login: POST /api/users/token/ (phone, password)\n    const response = await axios.post('http://localhost:8001/api/users/token/', {\n      phone,\n      password\n    });\n    const {\n      access,\n      refresh\n    } = response.data;\n    localStorage.setItem('token', access);\n    localStorage.setItem('refreshToken', refresh);\n    return response;\n  },\n  refresh: async () => {\n    const refresh = localStorage.getItem('refreshToken');\n    if (!refresh) throw new Error('No refresh token');\n    const response = await axios.post('http://localhost:8001/api/users/token/refresh/', {\n      refresh\n    });\n    localStorage.setItem('token', response.data.access);\n    return response;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n  }\n};\nexport const companiesAPI = {\n  getCompanies: () => api.get('/companies/'),\n  getCompany: id => api.get(`/companies/${id}/`),\n  getCompanyProducts: id => api.get(`/companies/${id}/products/`),\n  connectToCompany: id => api.post(`/companies/${id}/connect/`)\n};\nexport const productsAPI = {\n  getProducts: () => api.get('/products/'),\n  getProduct: id => api.get(`/products/${id}/`)\n};\nexport const bonusAPI = {\n  getBonuses: () => api.get('/bonuses/'),\n  getBonusHistory: () => api.get('/transactions/'),\n  getTotalBonus: () => api.get('/bonuses/total/')\n};\nexport const ordersAPI = {\n  createOrder: data => api.post('/orders/', data),\n  getOrders: () => api.get('/orders/'),\n  getOrder: id => api.get(`/orders/${id}/`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","phone","password","response","post","access","refresh","data","setItem","Error","logout","removeItem","companiesAPI","getCompanies","get","getCompany","id","getCompanyProducts","connectToCompany","productsAPI","getProducts","getProduct","bonusAPI","getBonuses","getBonusHistory","getTotalBonus","ordersAPI","createOrder","getOrders","getOrder"],"sources":["/Users/arsen/uds_app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8001/api/uds';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Добавляем токен к запросам\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  login: async (phone, password) => {\n    // JWT login: POST /api/users/token/ (phone, password)\n    const response = await axios.post('http://localhost:8001/api/users/token/', { phone, password });\n    const { access, refresh } = response.data;\n    localStorage.setItem('token', access);\n    localStorage.setItem('refreshToken', refresh);\n    return response;\n  },\n  refresh: async () => {\n    const refresh = localStorage.getItem('refreshToken');\n    if (!refresh) throw new Error('No refresh token');\n    const response = await axios.post('http://localhost:8001/api/users/token/refresh/', { refresh });\n    localStorage.setItem('token', response.data.access);\n    return response;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n  },\n};\n\nexport const companiesAPI = {\n  getCompanies: () => api.get('/companies/'),\n  getCompany: (id) => api.get(`/companies/${id}/`),\n  getCompanyProducts: (id) => api.get(`/companies/${id}/products/`),\n  connectToCompany: (id) => api.post(`/companies/${id}/connect/`),\n};\n\nexport const productsAPI = {\n  getProducts: () => api.get('/products/'),\n  getProduct: (id) => api.get(`/products/${id}/`),\n};\n\nexport const bonusAPI = {\n  getBonuses: () => api.get('/bonuses/'),\n  getBonusHistory: () => api.get('/transactions/'),\n  getTotalBonus: () => api.get('/bonuses/total/'),\n};\n\nexport const ordersAPI = {\n  createOrder: (data) => api.post('/orders/', data),\n  getOrders: () => api.get('/orders/'),\n  getOrder: (id) => api.get(`/orders/${id}/`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}